package com.elite.service;

import java.util.HashMap;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.elite.dao.DaangnMemberDAO;
import com.elite.dao.DaangnMypageDAO;
import com.elite.dao.DaangnNoticeDAO;
import com.elite.dao.DaangnProductDAO;
import com.elite.vo.DaangnProductVO;

@Service("pageService")
public class PageServiceImpl implements PageService {

	int pageSize, reqPage, dbCount;
	
	@Autowired
	private DaangnNoticeDAO noticeDAO;
	
	@Autowired
	private DaangnMemberDAO memberDAO;
	
	@Autowired
	private DaangnProductDAO productDAO;
	
	@Autowired
	private DaangnMypageDAO mypageDAO;
	
	/*@Autowired
	private DaangnBoardDAO boardDAO;*/

	@Override
	public int getPageSize() {
		return pageSize;
	}
	@Override
	public int getPageSize(int number) {
		return pageSize;
	}

	@Override
	public int getReqPage() {
		return reqPage;
	}

	@Override
	public int getDbCount() {
		return dbCount;
	}

	@Override
	public int getDbCount(String countName) {
		
		if(countName.equals("answer")){
			dbCount = noticeDAO.getDbCount();
		}else if(countName.equals("notice")){
			dbCount = noticeDAO.getNoticeCount();
		}else if(countName.equals("member")){
			dbCount = memberDAO.getDbcount();
		}else if(countName.equals("product")){
			dbCount = productDAO.getDbcount();
		}
		
		return dbCount;
	}
	//공지사항 페이징
	@Override
	public int getSearchDbCount(String keyword){
		
		return dbCount = noticeDAO.searchCount(keyword);
	}
	//상품검색 dbcount
	/*@Override
	public int getSearchDbCount2(String keyword){
		
		return dbCount = productDAO.searchCount(keyword);
	}*/
	
	@Override
	public int getDbCount(String countName, String id) {
		
		if(countName.equals("answer")){
			dbCount = noticeDAO.getDbCount(id);
		}else if(countName.equals("cart")){
			dbCount = mypageDAO.getDbCount(id);
		}
		
		return dbCount;
	}
	
	@Override
	public int getDbProductCount(String countName, String category){
		if(countName.equals("product")){
			dbCount = productDAO.getDbProductCount(category);
			System.out.println("getDbProductCount="+category);
		}
		return dbCount;
	}
	
	
	
	
	@Override
	public HashMap<String,Object> getSearchList(String rpage,String keyword){
		
		HashMap<String, Object> hm = new HashMap<String, Object>();
		int startCount = 0;
		int endCount = 0;
		int pageCount = 1;	//전체 페이지 수
		pageSize = 5;	//한페이지당 게시물 수
		reqPage = 1;	//요청페이지	
		dbCount = getSearchDbCount(keyword);	//DB에서 가져온 전체 행수

		//총 페이지 수 계산
		if(dbCount % pageSize == 0){
			pageCount = dbCount/pageSize;
		}else{
			pageCount = dbCount/pageSize+1;
		}
		
		//요청 페이지 계산
		if(rpage != null){
			reqPage = Integer.parseInt(rpage);
			startCount = (reqPage-1) * pageSize+1;
			endCount = reqPage *pageSize;
		}else{
			reqPage = 1;
			startCount = 1;
			endCount = pageSize;
		}
		
		
				hm.put("list", noticeDAO.noticeSearch(keyword, startCount, endCount));
				return hm;
		
		
	}
	
	/*@Override
	public HashMap<String, Object> getSearchList2(int rpage,String keyword){
		
		HashMap<String, Object> hm = new HashMap<String,Object>();
		int startCount = 0;
		int endCount = 0;
		int pageCount = 1;	//전체 페이지 수
		pageSize = 5;	//한페이지당 게시물 수
		reqPage = 1;	//요청페이지	
		dbCount = getSearchDbCount(keyword);	//DB에서 가져온 전체 행수

		//총 페이지 수 계산
		if(dbCount % pageSize == 0){
			pageCount = dbCount/pageSize;
		}else{
			pageCount = dbCount/pageSize+1;
		}
		
		//요청 페이지 계산
		if(rpage != 0){
			reqPage = rpage;
			startCount = (reqPage-1) * pageSize+1;
			endCount = reqPage *pageSize;
		}else{
			reqPage = 1;
			startCount = 1;
			endCount = pageSize;
		}
		
		hm.put("list", productDAO.getSearch(keyword, startCount, endCount));
		
		return hm;
	}*/
	
	//product search
	/*@Override
	public HashMap<String,Object> getSearchList(String rpage,String countName,String keyword){
		
		HashMap<String, Object> hm = new HashMap<String, Object>();
		int startCount = 0;
		int endCount = 0;
		int pageCount = 1;	//전체 페이지 수
		pageSize = 5;	//한페이지당 게시물 수
		reqPage = 1;	//요청페이지	
		dbCount = getSearchDbCount(keyword);	//DB에서 가져온 전체 행수

		//총 페이지 수 계산
		if(dbCount % pageSize == 0){
			pageCount = dbCount/pageSize;
		}else{
			pageCount = dbCount/pageSize+1;
		}
		
		//요청 페이지 계산
		if(rpage != null){
			reqPage = Integer.parseInt(rpage);
			startCount = (reqPage-1) * pageSize+1;
			endCount = reqPage *pageSize;
		}else{
			reqPage = 1;
			startCount = 1;
			endCount = pageSize;
		}
		
		hm.put("list", productDAO.productSearch(startCount, endCount,keyword));
		
		return hm;
	}*/
	
	
	

	@Override
	public HashMap<String, Object> getPageList(String rpage, String countName) {
		HashMap<String, Object> hm = new HashMap<String, Object>();
		
		int startCount = 0;
		int endCount = 0;
		int pageCount = 1;	//전체 페이지 수
		pageSize = 5;	//한페이지당 게시물 수
		reqPage = 1;	//요청페이지	
		dbCount = getDbCount(countName);	//DB에서 가져온 전체 행수
		
		//총 페이지 수 계산
		if(dbCount % pageSize == 0){
			pageCount = dbCount/pageSize;
		}else{
			pageCount = dbCount/pageSize+1;
		}
		
		//요청 페이지 계산
		if(rpage != null){
			reqPage = Integer.parseInt(rpage);
			startCount = (reqPage-1) * pageSize+1;
			endCount = reqPage *pageSize;
		}else{
			reqPage = 1;
			startCount = 1;
			endCount = pageSize;
		}
		
		if(countName.equals("answer")){
			hm.put("list", noticeDAO.getAdminAnswerList(startCount, endCount));
		}else if(countName.equals("notice")){
			hm.put("list", noticeDAO.noticeTotalList(startCount, endCount));
		}else if(countName.equals("member")){
			hm.put("list", memberDAO.getTotalList(startCount, endCount));
		}
		
		return hm;
	}
	
	@Override
	public HashMap<String, Object> getPageList(String rpage, String countName, String id) {
		HashMap<String, Object> hm = new HashMap<String, Object>();
		
		int startCount = 0;
		int endCount = 0;
		int pageCount = 1;	//전체 페이지 수
		pageSize = 5;	//한페이지당 게시물 수
		reqPage = 1;	//요청페이지	
		dbCount = getDbCount(countName, id);	//DB에서 가져온 전체 행수

		//총 페이지 수 계산
		if(dbCount % pageSize == 0){
			pageCount = dbCount/pageSize;
		}else{
			pageCount = dbCount/pageSize+1;
		}
		
		//요청 페이지 계산
		if(rpage != null){
			reqPage = Integer.parseInt(rpage);
			startCount = (reqPage-1) * pageSize+1;
			endCount = reqPage *pageSize;
		}else{
			reqPage = 1;
			startCount = 1;
			endCount = pageSize;
		}
		
		if(countName.equals("answer")){
			hm.put("list", noticeDAO.getAdminAnswerList2(startCount, endCount, id));
		}else if(countName.equals("cart")){
			hm.put("list", mypageDAO.productTotalList(startCount, endCount,id));
			
			
		}
		
		
		return hm;
	}

	
	@Override
	public HashMap<String, Object> getPageList(String rpage, String countName, String category, int number) {
		HashMap<String, Object> hm = new HashMap<String, Object>();
		int startCount = 0;
		int endCount = 0;
		int pageCount = 1;	//전체 페이지 수
		pageSize = number;	//한페이지당 게시물 수
		reqPage = 1;	//요청페이지	
		dbCount = getDbProductCount(countName, category);	//DB에서 가져온 전체 행수
		//총 페이지 수 계산
		if(dbCount % pageSize == 0){
			pageCount = dbCount/pageSize;
		}else{
			pageCount = dbCount/pageSize+1;
		}
		
		//요청 페이지 계산
		if(rpage != null){
			reqPage = Integer.parseInt(rpage);
			startCount = (reqPage-1) * pageSize+1;
			endCount = reqPage *pageSize;
		}else{
			reqPage = 1;
			startCount = 1;
			endCount = pageSize;
		}
		
		if(countName.equals("product")){
			hm.put("list", productDAO.getProductList(category, startCount, endCount));
		}
		
		return hm;
	}
	
	
	
	
	
}
