<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.product">

	<!-- insert -->
	<insert id="insert_product" parameterType="com.elite.vo.DaangnProductVO" useGeneratedKeys="true" keyProperty="pid">
		INSERT INTO
		DAANGN_PRODUCT(PID, ID, PCATE, PTITLE, PTYPE, PPRICE, PCONTENT, PDATE, PSTATE, PHITS)
		VALUES(SEQU_DAANGN_PRODUCT.NEXTVAL, #{id}, #{pcate},#{ptitle}, #{ptype}, #{pprice}, #{pcontent}, sysdate, '판매중', 0)
		<selectKey keyProperty="pid" resultType="java.lang.String">
				SELECT SEQU_DAANGN_PRODUCT.CURRVAL AS PID FROM DUAL
		</selectKey>
	</insert>
	
	<!-- file insert -->
	<insert id="insert_product_file" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="INSERT ALL " separator=" " close="SELECT * FROM DUAL">
			INTO
			DAANGN_FILE(FID,PID,PFILE,OPFILE) 
			VALUES(GET_FID(),#{item.pid},#{item.pfile},#{item.opfile})
		</foreach>
	</insert>
	
	<!-- product list - main -->
	<select id="list_product" parameterType="map" resultType="com.elite.vo.DaangnProductVO">
		<if test='page == "main"'>
			SELECT * FROM(
		</if>
			SELECT * FROM(
			SELECT CT.PID, CT.PTITLE, CT.PPRICE, CT.PDATE, CT.PSTATE, CT.PTYPE, CT.ADDRESS, CT.ADDR_SIDO, CT.ADDR_SIGUNGU, CT.CART, MT.MSG
			FROM(
			SELECT P.PID, P.PTITLE, P.PPRICE, P.PDATE, P.PSTATE, P.PTYPE, ME.ADDRESS, ME.ADDR_SIDO, ME.ADDR_SIGUNGU, COUNT(C.PID) CART
			FROM DAANGN_PRODUCT P, DAANGN_CART C, DAANGN_MEMBER ME
			WHERE P.PID = C.PID(+)
			AND P.ID=ME.ID
			GROUP BY C.PID, P.PID, P.PTITLE, P.PPRICE, P.PDATE, P.PSTATE, P.PTYPE, ME.ADDRESS, ME.ADDR_SIDO, ME.ADDR_SIGUNGU, C.PID) CT,
			(SELECT P.PID, COUNT(M.PID) MSG
			FROM DAANGN_PRODUCT P,DAANGN_MESSAGE M
			WHERE P.PID = M.PID(+)
			GROUP BY P.PID, M.PID) MT
			WHERE CT.PID = MT.PID)
			ORDER BY PDATE DESC
		<if test='page == "main"'>
			)WHERE ROWNUM BETWEEN 1 AND 7
		</if>
	</select>
	
	<!-- product db count -->
	<!-- state 1 & 2 -->
	<select id="productDbCount12" parameterType="java.lang.String" resultType="int">
		SELECT COUNT(*) FROM DAANGN_PRODUCT WHERE PSTATE!='판매완료'
		<if test="state == 2">
			AND PCATE=#{keyword}
		</if>
	</select>

	<!-- state 3 & 4 & 5-->
	<select id="productDbCount345" parameterType="java.lang.String" resultType="int">
		SELECT COUNT(*) FROM
		(SELECT P2.PID, P2.PTITLE, P2.PSTATE, M2.ADDRESS, M2.ADDR_SIDO, M2.ADDR_SIGUNGU, M2.ADDR_BNAME
		FROM  DAANGN_MEMBER M2, DAANGN_PRODUCT P2 WHERE P2.ID = M2.ID AND P2.PSTATE!='판매완료')
			<choose>
				<when test="state == 3">
			        WHERE ADDRESS LIKE '%'||#{keyword}||'%' OR PTITLE LIKE '%'||#{keyword}||'%'
				</when>
				<when test="state == 4">
					WHERE ADDR_SIDO=#{keyword}
				</when>
				<otherwise>
					WHERE ADDR_SIDO=#{keyword1} AND ADDR_SIGUNGU=#{keyword2}
				</otherwise>
			</choose>
	</select>
	
	<!-- product list -->
	<!-- state 0 & 1 & 2 -->
	<select id="productList012" parameterType="map" resultType="com.elite.vo.DaangnProductVO">
		SELECT * FROM(
		SELECT ROWNUM RNO, PID, PTITLE, PPRICE, PDATE, PSTATE, PTYPE, ADDR_SIDO, ADDR_SIGUNGU, CART, MSG
		FROM(
		SELECT * FROM(
		SELECT CT.PID, CT.PTITLE, CT.PPRICE, CT.PDATE, CT.PSTATE, CT.PTYPE, CT.ADDR_SIDO, CT.ADDR_SIGUNGU, CT.CART, MT.MSG
		FROM
		(SELECT P.PID, P.PTITLE, P.PPRICE, P.PDATE, P.PSTATE, P.PTYPE, ME.ADDR_SIDO, ME.ADDR_SIGUNGU, COUNT(C.PID) CART
		FROM DAANGN_PRODUCT P, DAANGN_CART C, DAANGN_MEMBER ME	
		WHERE P.PID = C.PID(+) AND P.PSTATE!='판매완료'
			<choose>
				<when test="state == 1 or state == 0">
					AND P.ID=ME.ID 
				</when>
				<otherwise>
					AND P.ID = ME.ID AND P.PCATE=#{keyword}
				</otherwise>	
			</choose>
		GROUP BY C.PID, P.PID, P.PTITLE, P.PPRICE, P.PDATE, P.PSTATE, P.PTYPE, ME.ADDR_SIDO, ME.ADDR_SIGUNGU, C.PID) CT,
		(SELECT P.PID, COUNT(M.PID) MSG
		FROM DAANGN_PRODUCT P,
		(SELECT DISTINCT M1.ID, M1.PID, M1.RID FROM DAANGN_MESSAGE M1, DAANGN_PRODUCT P1
		WHERE M1.PID(+) = P1.PID
		AND P1.ID = M1.RID) M
		WHERE P.PID = M.PID(+)
		GROUP BY P.PID) MT
		WHERE CT.PID = MT.PID)
		ORDER BY PDATE DESC))
				<choose>
				<when test="state == 1 or state == 2">
					WHERE RNO BETWEEN #{start} AND #{end}
				</when>
				<otherwise>
					WHERE RNO BETWEEN 1 AND 7
				</otherwise>	
			</choose>
	</select>
			
	<!-- state 3 & 4 & 5-->
	<select id="productList345" parameterType="map" resultType="com.elite.vo.DaangnProductVO">
		SELECT * FROM(
		SELECT ROWNUM RNO, PID, PTITLE, PPRICE, PDATE, PSTATE, PTYPE, ADDR_SIDO, ADDR_SIGUNGU, CART, MSG FROM(
		SELECT * FROM(
		SELECT CT.PID, CT.PTITLE, CT.PPRICE, CT.PDATE, CT.PSTATE, CT.PTYPE, CT.ADDRESS, CT.ADDR_SIDO, CT.ADDR_SIGUNGU, CT.CART, MT.MSG FROM
		(SELECT P.PID, P.PTITLE, P.PPRICE, P.PDATE, P.PSTATE, P.PTYPE, P.ADDRESS, P.ADDR_SIDO, P.ADDR_SIGUNGU, COUNT(C.PID) CART FROM
        (SELECT * FROM
        (SELECT P2.PID, P2.PTITLE, P2.PPRICE, P2.PDATE, P2.PSTATE, P2.PTYPE, M2.ADDRESS, M2.ADDR_SIDO, M2.ADDR_SIGUNGU, M2.ADDR_BNAME
        FROM  DAANGN_MEMBER M2, DAANGN_PRODUCT P2 WHERE P2.ID = M2.ID AND P2.PSTATE!='판매완료')
			<choose>
				<when test="state == 3">
			        WHERE ADDRESS LIKE '%'||#{keyword}||'%' OR PTITLE LIKE '%'||#{keyword}||'%') P,
				</when>
				<when test="state == 4">
					WHERE ADDR_SIDO=#{keyword}) P,
				</when>
				<otherwise>
					WHERE ADDR_SIDO=#{keyword1} AND ADDR_SIGUNGU=#{keyword2}) P,
				</otherwise>	
			</choose>
		DAANGN_CART C
		WHERE P.PID = C.PID(+)
		GROUP BY C.PID, P.PID, P.PTITLE, P.PPRICE, P.PDATE, P.PSTATE, P.PTYPE, P.ADDRESS, P.ADDR_SIDO, P.ADDR_SIGUNGU, C.PID) CT,
		(SELECT P.PID, COUNT(M.PID) MSG FROM DAANGN_PRODUCT P,
		(SELECT DISTINCT M1.ID, M1.PID, M1.RID FROM DAANGN_MESSAGE M1, DAANGN_PRODUCT P1
		WHERE M1.PID(+) = P1.PID
		AND P1.ID = M1.RID) M
		WHERE P.PID = M.PID(+)
		GROUP BY P.PID) MT
		WHERE CT.PID = MT.PID)
		ORDER BY PDATE DESC))
		WHERE RNO BETWEEN #{start} AND #{end}
	</select>
	
	<!-- sales count -->
	<select id="getSalesDbCount" parameterType="java.lang.String" resultType="int">
		SELECT COUNT(PID) FROM DAANGN_PRODUCT WHERE ID=#{id}
	</select>

	<!-- sales -->
	<select id="sales_list" parameterType="map" resultType="com.elite.vo.DaangnProductVO">
		SELECT * FROM(
		SELECT ROWNUM RNO, PID, PTITLE, PPRICE, PDATE, PSTATE, PTYPE, CART, MSG FROM( 
		SELECT * FROM(
		SELECT * FROM(  
		SELECT CT.PID, CT.PTITLE, CT.PPRICE, TO_CHAR(CT.PDATE,'YYYY-MM-DD HH24:MI:SS') PDATE, CT.PSTATE, CT.PTYPE, CT.CART, MT.MSG FROM   
		(SELECT P.PID, P.PTITLE, P.PPRICE, P.PDATE, P.PSTATE, P.PTYPE, COUNT(C.PID) CART
		FROM DAANGN_PRODUCT P, DAANGN_CART C
		WHERE P.PID = C.PID(+) 
		AND P.ID=#{id}
		GROUP BY C.PID, P.PID, P.PTITLE, P.PPRICE, P.PDATE, P.PSTATE, P.PTYPE) CT,
		(SELECT P.PID, COUNT(M.PID) MSG FROM 
		(SELECT * FROM DAANGN_PRODUCT WHERE ID=#{id}) P, 
		(SELECT * FROM (SELECT DISTINCT ID, PID, RID FROM DAANGN_MESSAGE) WHERE RID = #{id}) M
		WHERE P.PID = M.PID(+)
		GROUP BY P.PID) MT
		WHERE CT.PID = MT.PID)
		ORDER BY PDATE DESC)))
		WHERE RNO BETWEEN #{start} AND #{end}
	</select>
	
	<!-- product file list -->
	<select id="product_file_list" parameterType="java.lang.String" resultType="com.elite.vo.DaangnFileVO">
		SELECT FID, PFILE, OPFILE FROM DAANGN_FILE WHERE PID=#{pid} ORDER BY FID
	</select> 
	
	<!-- pstate update -->
	<update id="pstate_update" parameterType="map">
		UPDATE DAANGN_PRODUCT SET PSTATE=#{pstate} WHERE PID=#{pid}
	</update>
	
	<!-- pdate update -->
	<update id="pdate_update" parameterType="java.lang.String">
		UPDATE DAANGN_PRODUCT SET PDATE=SYSDATE WHERE PID=#{pid}
	</update>

	<!-- product content -->
	<select id="product_content" parameterType="java.lang.String" resultType="com.elite.vo.DaangnProductVO">
		SELECT  PID, PCATE, PTITLE, PTYPE, PPRICE, PCONTENT FROM DAANGN_PRODUCT WHERE PID=#{pid}
	</select>
	
	<!-- number of files -->
	<select id="number_of_files" parameterType="java.lang.String" resultType="int">
		SELECT COUNT(*) FROM DAANGN_FILE WHERE PID=#{pid}
	</select>
	
	<!-- product file delete -->
	<delete id="product_file_delete" parameterType="java.lang.String">
		DELETE FROM DAANGN_FILE WHERE PID=#{pid}
	</delete>
	
	<!-- product update -->
	<update id="update_product" parameterType="com.elite.vo.DaangnProductVO">
		UPDATE DAANGN_PRODUCT 
		SET PCATE=#{pcate}, PTITLE=#{ptitle}, PTYPE=#{ptype}, PPRICE=#{pprice}, PCONTENT=#{pcontent}
		WHERE PID=#{pid}
	</update>
	
	<!-- product delete -->
	<delete id="product_delete" parameterType="java.lang.String">
		DELETE FROM DAANGN_PRODUCT WHERE PID=#{pid}
	</delete>
	
	<!-- get sido -->
	<select id="getSido" resultType="com.elite.vo.DaangnJusoVO">
		SELECT DISTINCT SIDO FROM DAANGN_JUSO ORDER BY SIDO
	</select>
	
	<!-- get sigungu -->
	<select id="getSigungu" parameterType="java.lang.String" resultType="com.elite.vo.DaangnJusoVO">
		SELECT DISTINCT SIGUNGU FROM DAANGN_JUSO WHERE SIDO=#{sido} ORDER BY SIGUNGU
	</select>
	
	<!-- get hname -->
	<select id="getHname" parameterType="java.lang.String" resultType="com.elite.vo.DaangnJusoVO">
		SELECT DISTINCT HNAME FROM DAANGN_JUSO WHERE SIGUNGU=#{sigungu} ORDER BY HNAME
	</select>
	
	<!-- chat id list -->
	<select id="getChatIDList" parameterType="map" resultType="com.elite.vo.DaangnChatVO">
		SELECT ID FROM DAANGN_MESSAGE WHERE PID=#{pid} AND RID=#{rid}
	</select>
	
	<!-- review insert -->
	<insert id="getReviewResult" parameterType="com.elite.vo.DaangnReviewVO">
		INSERT INTO DAANGN_REVIEW(RID, ID, RSTATE, RCOMMENT, RDETAIL, PID, CORS)
		VALUES(SEQ_DAANGN_REVIEW.NEXTVAL, #{id},#{rstate},#{rcomment},#{rdetail},#{pid},'판매')
	</insert>
	
	<!-- order insert -->
	<insert id="getOrderResult" parameterType="com.elite.vo.DaangnReviewVO">
		INSERT INTO DAANGN_ORDER(OID, ID, PID, BDATE)
		VALUES(SEQ_DAANGN_ORDER.NEXTVAL, #{id},#{pid},sysdate)
	</insert>

</mapper>